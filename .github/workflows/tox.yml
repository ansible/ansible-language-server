# alternative KISS pipeline to bloated ci.yml, modeled after vscode-ansible one.
name: tox

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  FORCE_COLOR: "1" # make mocha output colorful
  # https://devblogs.microsoft.com/commandline/share-environment-vars-between-wsl-and-windows/
  WSLENV: FORCE_COLOR:GITHUB_PATH/p

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    env:
      # to expose matrix job name to steps, which is not possible with expansions
      JOB_NAME: ${{ matrix.name || format('{0} ({1})', matrix.tox-target, matrix.os) }}
    name: ${{ matrix.name || format('{0} ({1})', matrix.tox-target, matrix.os) }}
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os || 'ubuntu-latest' }}
    defaults:
      run:
        shell: ${{ matrix.shell || 'bash'}}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        node-version:
          - "12"
        tox-target:
          - test-node12
          - test-node14
          - test-node16
        upload-artifact:
          - false
        name:
          - false
        include:
          - name: lint
            tox-target: lint
          - name: docs
            tox-target: docs
          - name: test (wsl)
            # runner does not support running container
            tox-target: test-without-ee
            # https://github.com/actions/virtual-environments/issues/5151
            os: windows-2019
            shell: "wsl-bash {0}"
          - name: test (macos)
            os: macos-11
            # runner does not support running container
            tox-target: test-without-ee

    steps:
      - name: Disable autocrlf
        if: "contains(matrix.os, 'windows')"
        run: |-
          git config --global core.autocrlf false
          git config --global core.eol lf
        shell: bash # <-- keep it here to avoid using default shell

      - uses: actions/checkout@v2

      # https://github.com/marketplace/actions/setup-wsl
      - name: Activate WSL
        if: "contains(matrix.shell, 'wsl')"
        uses: Vampire/setup-wsl@v1
        with:
          # we want to load user profile
          # https://github.com/Vampire/setup-wsl#wsl-shell-command
          wsl-shell-command: "bash -i -euo pipefail"

      - name: Run ./tools/test-setup.sh
        run: ./tools/test-setup.sh

      - name: Install tox
        run: python3 -m pip install --user tox

      - name: Dump node version into .nvmrc file
        # save node version in .nvmrc file by looking for a pattern like
        # node12 in job name. If pattern is not found it uses 'current' alias
        run: >
          python3 -c 'import os, re;
          v = re.search("node(\d+)", os.environ.get("JOB_NAME", "")) or ["", "current"];
          print(v[1])' > .nvmrc

      - name: Use node
        # as Windows executables are exposed inside WSL at top of PATH, we
        # would end with broken npm script in PATH on wsl.
        if: "!contains(matrix.shell, 'wsl')"
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: tox -e ${{ matrix.tox-target }}
        run: python3 -m tox -e ${{ matrix.tox-target }}

  check: # This job does nothing and is only used for the branch protection
    if: always()
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
